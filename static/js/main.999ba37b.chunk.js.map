{"version":3,"sources":["components/InputData.jsx","shapes.js","components/TableItem.jsx","components/Table.jsx","App.jsx","index.jsx"],"names":["InputData","PropTypes","shape","rows","string","columns","showTable","bool","cell","generateTable","func","incrementCell","amount","number","id","state","highlight","showForm","error","onChangeInput","target","name","value","setState","replace","handleAddData","event","preventDefault","trim","props","errorObj","this","className","onSubmit","type","placeholder","maxLength","onChange","React","Component","TableItem","onClick","Table","table","Array","keys","map","row","oneRow","splice","key","item","App","randomGenerate","Math","floor","random","uuidv4","data","Number","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.999ba37b.chunk.js","sourcesContent":["import React from 'react'\nimport { InputDataShape } from '../shapes'\n\nexport class InputData extends React.Component {\n  state = {\n    rows: '',\n    columns: '',\n    highlight: '',\n    showForm: true,\n    error: {\n      rows: '',\n      columns: ''\n    }\n  }\n\n  onChangeInput = (target) => {\n    const { name, value } = target\n\n    this.setState(({\n      [name]: value.replace(/[^0-9\\b]+$/, ''),\n      error: {\n        [name]: false\n      }\n    }))\n  }\n\n  handleAddData = (event) => {\n    event.preventDefault()\n\n    const { rows, columns, highlight } = this.state\n\n    if (rows.trim() && columns.trim() && highlight.trim()) {\n      this.props.generateTable(this.state)\n\n      this.setState({\n        rows: '',\n        columns: '',\n        highlight: '',\n        showForm: false\n      })\n    }\n\n    const errorObj = {\n      rows: '',\n      columns: '',\n      highlight: '',\n    }\n\n    if (!rows) {\n      errorObj.rows = true\n    }\n\n    if (!columns) {\n      errorObj.columns = true\n    }\n\n    if (!highlight) {\n      errorObj.highlight = true\n    }\n\n    this.setState({\n      error: {\n        rows: errorObj.rows,\n        columns: errorObj.columns,\n        highlight: errorObj.highlight,\n      }\n    })\n  }\n\n  render () {\n    const { rows, columns, highlight, showForm, error } = this.state\n\n    return (\n      showForm && (\n        <form className=\"form\" onSubmit={(event) => this.handleAddData(event)}>\n          {\n            error.rows && (\n              <div className=\"form__error\">\n                Please add rows value\n              </div>\n            )\n          }\n          <input\n            type=\"text\"\n            name=\"rows\"\n            className={`form ${error && 'form--error'}`}\n            placeholder=\"Rows...\"\n            maxLength=\"3\"\n            onChange={(event) => this.onChangeInput(event.target)}\n            value={rows}\n          />\n          {\n            error.columns && (\n              <div className=\"form__error\">\n                Please add columns value\n              </div>\n            )\n          }\n          <input\n            type=\"text\"\n            name=\"columns\"\n            className={`form ${error && 'form--error'}`}\n            placeholder=\"Columns...\"\n            maxLength=\"3\"\n            onChange={(event) => this.onChangeInput(event.target)}\n            value={columns}\n          />\n          {\n            error.columns && (\n              <div className=\"form__error\">\n                Please add columns value\n              </div>\n            )\n          }\n          <input\n            type=\"text\"\n            name=\"highlight\"\n            className={`form ${error && 'form--error'}`}\n            placeholder=\"Highlight cells...\"\n            maxLength=\"3\"\n            onChange={(event) => this.onChangeInput(event.target)}\n            value={highlight}\n          />\n          <button\n            type=\"submit\"\n            className=\"button\"\n          >\n            Generate table\n          </button>\n        </form>\n      )\n    )\n  }\n}\n\nInputData.propTypes = InputDataShape.isRequired\n","import PropTypes from 'prop-types'\n\nexport const TableShape = PropTypes.shape({\n  rows: PropTypes.string,\n  columns: PropTypes.string,\n  showTable: PropTypes.bool,\n  cell:  PropTypes.string,\n});\n\nexport const InputDataShape = PropTypes.shape({\n  generateTable: PropTypes.func\n});\n\nexport const TableItemShape = PropTypes.shape({\n  incrementCell: PropTypes.func,\n  amount: PropTypes.number,\n  id: PropTypes.number,\n});\n","import React from 'react';\nimport { TableItemShape } from '../shapes';\n\nexport const TableItem = (props) => {\n  const { incrementCell, amount, id } = props;\n\n  return (\n    <td\n      id={id}\n      onClick={(event) => incrementCell(event)}\n    >\n      {amount}\n    </td>\n  );\n}\n\nTableItem.propTypes = TableItemShape.isRequired;\n","import React from 'react'\nimport { TableShape } from '../shapes'\nimport { TableItem } from './TableItem';\n\nexport const Table = (props) => {\n  const { rows, columns, table, showTable, incrementCell } = props;\n\n  return (\n    <>\n      {showTable && (\n        <table className=\"table table-dark\">\n          <tbody>\n            {[...Array(rows).keys()].map(row => {\n              const oneRow = table.splice(0, columns);\n\n              return (\n                <tr key={row}>\n                  {oneRow.map(item => (\n                  <TableItem\n                    key={item.id}\n                    id={item.id}\n                    amount={item.amount}\n                    incrementCell={incrementCell}\n                  />\n                  ))}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      )}\n    </>\n  )\n}\n\nTable.propTypes = TableShape.isRequired\n","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid'\n// import { Provider } from 'react-redux'\n// import store from './store'\nimport { InputData } from './components/InputData'\nimport { Table } from './components/Table'\nimport './App.css'\n\nclass App extends React.Component {\n  state = {\n    rows: '',\n    columns: '',\n    table: [],\n    showTable: false\n  }\n\n  randomGenerate = (item => ({\n    amount: Math.floor(Math.random() * 999),\n    id: uuidv4(),\n    highlight: false,\n  }));\n\n  generateTable = (data) => {\n    // rows and columns from input\n    const { rows, columns, highlight } = data;\n\n    this.setState({\n      rows: Number(rows),\n      columns: Number(columns),\n      table: [...Array(columns * rows).keys()].map(this.randomGenerate),\n      showTable: true,\n    })\n  }\n\n  incrementCell = (event) => {\n    event.preventDefault();\n    const { id } = event.target;\n\n    console.log(id, this.state.table);\n  }\n\n  render () {\n    const { rows, columns, showTable, table } = this.state;\n    console.log(table.map(item => item.highlight));\n\n    return (\n      <div className=\"main\">\n        <InputData generateTable={this.generateTable} />\n        <Table\n          rows={rows}\n          columns={columns}\n          showTable={showTable}\n          incrementCell={this.incrementCell}\n          table={table}\n        />\n      </div>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}