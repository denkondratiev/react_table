{"version":3,"sources":["store/actions.js","store/reducers.js","store/store.js","helpers/shapes.js","helpers/generate.js","components/Form/Form.jsx","components/TableCell/TableCell.jsx","components/TableCellSum/TableCellSum.jsx","components/TableRow/TableRow.jsx","helpers/selectors.js","components/AverageRow/AverageRow.jsx","components/Table/Table.jsx","helpers/getLightClosest.js","components/ButtonDelete/ButtonDelete.jsx","components/ButtonAdd/ButtonAdd.jsx","components/Buttons/Buttons.jsx","App.jsx","index.jsx"],"names":["ACTION_TYPES","rootReducer","combineReducers","params","state","action","SET_PARAMS","type","payload","table","SET_TABLE","ADD_ROW","REMOVE_ROW","filter","id","lastIndex","rows","SET_ROWS","cells","SET_CELLS","INCREMENT","amount","buttons","SHOW_BUTTONS","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","PropTypes","shape","number","columns","array","sumRowArray","lightsAmount","cell","isLight","bool","showPercent","percent","incrementCell","func","lightArray","onMouseEnterHandler","onMouseLeaveHandler","rowSum","onMouseEnterPercent","onMouseLeavePercent","row","averageArray","setParamsData","setTableData","setRowsData","setCellsData","setShowButtonsBoll","showButtons","deleteRow","addRow","generateTable","rowsAmount","columnsAmount","i","rowId","uuidv4","j","cellId","Math","floor","random","connect","dispatch","setParams","setShowButtons","props","useState","inputValue","setInputValue","error","setError","onChangeHandler","name","value","className","onSubmit","event","preventDefault","errorObj","handleGenerateTable","placeholder","onChange","target","React","memo","styleLight","backgroundColor","backgroundImage","onClick","onClickHandler","onMouseEnter","onMouseLeave","style","prevProps","nextProps","setShowPercent","map","key","toFixed","getRows","getCells","getColumnsAmount","getLightsAmount","getRowSum","createSelector","Object","values","item","reduce","prev","cur","getAverageRowSum","onlyAmount","res","length","setLightArray","arr","difference","abs","sort","a","b","slice","Number","obj","getLightClosest","index","ButtonDelete","ButtonAdd","setNewRow","removeRow","lastRow","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f173ae5c.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SET_PARAMS: 'SET::PARAMS',\n  SET_TABLE: 'SET::TABLE',\n  SET_ROWS: 'SET::ROWS',\n  SET_CELLS: 'SET::CELLS',\n  SHOW_BUTTONS: 'SHOW::BUTTONS',\n  INCREMENT: 'INCREMENT',\n  ADD_ROW: 'ADD_ROW',\n  REMOVE_ROW: 'REMOVE::ROW'\n}\n\nexport const setParams = params => ({\n  payload: params,\n  type: ACTION_TYPES.SET_PARAMS\n})\n\nexport const setTable = params => ({\n  payload: params,\n  type: ACTION_TYPES.SET_TABLE\n})\n\nexport const setRows = params => ({\n  payload: params,\n  type: ACTION_TYPES.SET_ROWS\n})\n\nexport const setCells = params => ({\n  payload: params,\n  type: ACTION_TYPES.SET_CELLS\n})\n\nexport const setShowButtons = params => ({\n  payload: params,\n  type: ACTION_TYPES.SHOW_BUTTONS\n})\n\nexport const increment = params => ({\n  type: ACTION_TYPES.INCREMENT,\n  payload: params\n})\n\nexport const setNewRow = params => ({\n  type: ACTION_TYPES.ADD_ROW,\n  payload: params\n})\n\nexport const removeRow = params => ({\n  type: ACTION_TYPES.REMOVE_ROW,\n  payload: params\n})\n","import { combineReducers } from 'redux'\nimport { ACTION_TYPES } from './actions'\n\nconst paramsReducer = (state = {}, action) => {\n  const { SET_PARAMS } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_PARAMS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nfunction tableReducer (state = [], action) {\n  const { SET_TABLE, ADD_ROW, REMOVE_ROW } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_TABLE:\n      return action.payload\n    case ADD_ROW:\n      return [...state, action.payload.table]\n    case REMOVE_ROW:\n      return state.filter(id => id !== action.payload.lastIndex)\n    default:\n      return state\n  }\n}\n\nconst rowsReducer = (state = {}, action) => {\n  const { SET_ROWS, ADD_ROW, REMOVE_ROW } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_ROWS:\n      return action.payload\n    case ADD_ROW:\n      return { ...state, ...action.payload.rows }\n    case REMOVE_ROW:\n      delete state[action.payload.lastIndex]\n      return state\n    default:\n      return state\n  }\n}\n\nconst cellsReducer = (state = {}, action) => {\n  const { SET_CELLS, INCREMENT, ADD_ROW } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_CELLS:\n      return action.payload\n    case ADD_ROW:\n      return { ...state, ...action.payload.cells }\n    case INCREMENT:\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          amount: state[action.payload].amount + 1\n        }\n      }\n    default:\n      return state\n  }\n}\n\nconst buttonsReducer = (state = false, action) => {\n  const { SHOW_BUTTONS } = ACTION_TYPES\n\n  switch (action.type) {\n    case SHOW_BUTTONS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport const rootReducer = combineReducers({\n  params: paramsReducer,\n  table: tableReducer,\n  rows: rowsReducer,\n  cells: cellsReducer,\n  buttons: buttonsReducer\n})\n","import { createStore } from 'redux'\nimport { rootReducer } from './reducers'\n\nconst store = createStore(\n  rootReducer,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store\n","import PropTypes from 'prop-types'\n\nexport const TableShape = PropTypes.shape({\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  table: PropTypes.array,\n  sumRowArray: PropTypes.number,\n  lightsAmount: PropTypes.number\n})\n\nexport const TableCellShape = PropTypes.shape({\n  id: PropTypes.number,\n  cell: PropTypes.number,\n  amount: PropTypes.number,\n  isLight: PropTypes.bool,\n  showPercent: PropTypes.bool,\n  percent: PropTypes.number,\n  incrementCell: PropTypes.func,\n  lightArray: PropTypes.array,\n  onMouseEnterHandler: PropTypes.func,\n  onMouseLeaveHandler: PropTypes.func\n})\n\nexport const TableCellSumShape = PropTypes.shape({\n  id: PropTypes.number,\n  rowSum: PropTypes.number,\n  onMouseEnterPercent: PropTypes.func,\n  onMouseLeavePercent: PropTypes.func\n})\n\nexport const TableRowShape = PropTypes.shape({\n  id: PropTypes.number,\n  row: PropTypes.array,\n  cells: PropTypes.array,\n  rowSum: PropTypes.number,\n  lightArray: PropTypes.array,\n  onMouseEnterHandler: PropTypes.func,\n  onMouseLeaveHandler: PropTypes.func\n})\n\nexport const AverageRowShape = PropTypes.shape({\n  averageArray: PropTypes.array\n})\n\nexport const FormShape = PropTypes.shape({\n  setParamsData: PropTypes.func,\n  setTableData: PropTypes.func,\n  setRowsData: PropTypes.func,\n  setCellsData: PropTypes.func,\n  setShowButtonsBoll: PropTypes.func\n})\n\nexport const ButtonsShape = PropTypes.shape({\n  showButtons: PropTypes.bool,\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  table: PropTypes.array\n})\n\nexport const ButtonDeleteShape = PropTypes.shape({\n  deleteRow: PropTypes.func\n})\n\nexport const ButtonAddShape = PropTypes.shape({\n  addRow: PropTypes.func\n})\n","import { v4 as uuidv4 } from 'uuid'\n\nexport const generateTable = (rowsAmount, columnsAmount) => {\n  const table = []\n  const rows = {}\n  const cells = {}\n\n  for (let i = 0; i < rowsAmount; i++) {\n    const rowId = uuidv4()\n    table[i] = rowId\n    rows[rowId] = []\n\n    for (let j = 0; j < columnsAmount; j++) {\n      const cellId = uuidv4()\n      rows[rowId][j] = cellId\n\n      cells[cellId] = {\n        id: cellId,\n        amount: Math.floor(Math.random() * 999)\n      }\n    }\n  }\n\n  return { table, rows, cells }\n}\n","import React, { useState } from 'react'\nimport { FormShape } from '../../helpers/shapes'\nimport { generateTable } from '../../helpers/generate'\nimport { connect } from 'react-redux'\nimport './Form.css'\nimport {\n  setParams,\n  setTable,\n  setRows,\n  setCells,\n  setShowButtons\n} from '../../store/actions'\n\nconst Form = (props) => {\n  const {\n    setParamsData,\n    setTableData,\n    setRowsData,\n    setCellsData,\n    setShowButtonsBoll\n  } = props\n\n  const [inputValue, setInputValue] = useState({\n    rowsAmount: '',\n    columnsAmount: '',\n    lightsAmount: ''\n  })\n\n  const [error, setError] = useState({\n    rowsAmount: false,\n    columnsAmount: false,\n    lightsAmount: false\n  })\n\n  const handleGenerateTable = (event) => {\n    event.preventDefault()\n\n    const rowsAmount = inputValue.rowsAmount\n    const columnsAmount = inputValue.columnsAmount\n    const lightsAmount = inputValue.lightsAmount\n\n    if (rowsAmount > 0 && columnsAmount > 0 && lightsAmount > 0) {\n      const { table, rows, cells } = generateTable(rowsAmount, columnsAmount)\n\n      setParamsData({ rowsAmount, columnsAmount, lightsAmount })\n      setTableData(table)\n      setRowsData(rows)\n      setCellsData(cells)\n      setShowButtonsBoll(true)\n\n      setInputValue({\n        rowsAmount: '',\n        columnsAmount: '',\n        lightsAmount: ''\n      })\n    }\n\n    const errorObj = {\n      rowsAmount: null,\n      columnsAmount: null,\n      lightsAmount: null\n    }\n\n    if (!rowsAmount || rowsAmount <= 0) {\n      errorObj.rowsAmount = true\n    }\n\n    if (!columnsAmount || columnsAmount <= 0) {\n      errorObj.columnsAmount = true\n    }\n\n    if (!lightsAmount || lightsAmount <= 0) {\n      errorObj.lightsAmount = true\n    }\n\n    setError({\n      rowsAmount: errorObj.rowsAmount,\n      columnsAmount: errorObj.columnsAmount,\n      lightsAmount: errorObj.lightsAmount\n    })\n  }\n\n  const onChangeHandler = ({ name, value }) => {\n    setError({ [name]: false })\n    setInputValue({ ...inputValue, [name]: value })\n  }\n\n  return (\n    <form className=\"form\" onSubmit={(event) => handleGenerateTable(event)}>\n      {\n        error.rowsAmount && (\n          <div>\n              Please add correct rows value\n          </div>\n        )\n      }\n      <input\n        type=\"number\"\n        name=\"rowsAmount\"\n        className={`form-control ${error.rowsAmount && 'error'}`}\n        placeholder=\"Rows...\"\n        onChange={(event) => onChangeHandler(event.target)}\n        value={inputValue.rowsAmount}\n      />\n      {\n        error.columnsAmount && (\n          <div>\n              Please add correct columns value\n          </div>\n        )\n      }\n      <input\n        type=\"number\"\n        name=\"columnsAmount\"\n        className={`form-control ${error.columnsAmount && 'error'}`}\n        placeholder=\"Columns...\"\n        onChange={(event) => onChangeHandler(event.target)}\n        value={inputValue.columnsAmount}\n      />\n      {\n        error.lightsAmount && (\n          <div>\n              Please add correct highlight value\n          </div>\n        )\n      }\n      <input\n        type=\"number\"\n        name=\"lightsAmount\"\n        className={`form-control ${error.lightsAmount && 'error'}`}\n        placeholder=\"Highlight cells...\"\n        onChange={(event) => onChangeHandler(event.target)}\n        value={inputValue.lightsAmount}\n      />\n      <button\n        type=\"submit\"\n        className=\"btn btn-dark\"\n      >\n        Generate\n      </button>\n    </form>\n  )\n}\n\nForm.propTypes = FormShape.isRequired\n\nconst mapDispatchToProps = dispatch => ({\n  setParamsData: params => dispatch(setParams(params)),\n  setTableData: table => dispatch(setTable(table)),\n  setRowsData: rows => dispatch(setRows(rows)),\n  setCellsData: cells => dispatch(setCells(cells)),\n  setShowButtonsBoll: params => dispatch(setShowButtons(params))\n})\n\nexport default connect(null, mapDispatchToProps)(Form)\n","import React from 'react'\nimport { TableCellShape } from '../../helpers/shapes'\nimport { connect } from 'react-redux'\nimport { increment } from '../../store/actions'\nimport './TableCell.css'\n\nconst areEqual = (prevProps, nextProps) => {\n  const { lightArray, showPercent, id, cell } = prevProps\n\n  if (nextProps.showPercent !== showPercent) {\n    return false\n  }\n  if (nextProps.cell.amount !== cell.amount) {\n    return false\n  }\n  if (nextProps.lightArray[id] !== lightArray[id]) {\n    return false\n  }\n  return true\n}\n\nconst TableCell = (props) => {\n  const {\n    id,\n    cell,\n    incrementCell,\n    lightArray,\n    showPercent,\n    percent,\n    onMouseEnterHandler,\n    onMouseLeaveHandler\n  } = props\n\n  let styleLight = {}\n\n  const onClickHandler = (id) => {\n    incrementCell(id)\n  }\n\n  if (lightArray[id]) {\n    styleLight = { backgroundColor: '#6c757d' }\n  }\n\n  if (showPercent) {\n    styleLight = { backgroundImage: `linear-gradient(90deg, rgba(220,53,69,1) ${percent}%, rgba(108,117,125,1) ${percent}%)` }\n  }\n\n  return (\n    <td\n      id={id}\n      onClick={(event) => onClickHandler(event.target.id)}\n      onMouseEnter={(event) => onMouseEnterHandler(event.target.id)}\n      onMouseLeave={onMouseLeaveHandler}\n      style={styleLight}\n    >\n      {\n        showPercent\n          ? `${percent}%`\n          : cell.amount\n      }\n    </td>\n  )\n}\n\nTableCell.propTypes = TableCellShape.isRequired\n\nconst mapDispatchToProps = (dispatch) => ({\n  incrementCell: id => dispatch(increment(id))\n})\n\nexport default connect(null, mapDispatchToProps)(React.memo(TableCell, areEqual))\n","import React from 'react'\nimport { TableCellSumShape } from '../../helpers/shapes'\n\nconst areEqual = (prevProps, nextProps) => {\n  const { rowSum } = prevProps\n\n  if (nextProps.rowSum !== rowSum) {\n    return false\n  }\n  return true\n}\n\nconst TableCellSum = (props) => {\n  const {\n    id,\n    rowSum,\n    onMouseEnterPercent,\n    onMouseLeavePercent\n  } = props\n\n  return (\n    <td\n      id={id}\n      onMouseEnter={onMouseEnterPercent}\n      onMouseLeave={onMouseLeavePercent}\n    >\n      Sum: {rowSum}\n    </td>\n\n  )\n}\n\nTableCellSum.propTypes = TableCellSumShape.isRequired\n\nexport default React.memo(TableCellSum, areEqual)\n","import React, { useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { TableRowShape } from '../../helpers/shapes'\nimport TableCell from '../TableCell/TableCell'\nimport TableCellSum from '../TableCellSum/TableCellSum'\n\nconst areEqual = (prevProps, nextProps) => {\n  const { row, cells, lightArray } = prevProps\n\n  for (const id of row) {\n    if (nextProps.cells[id].amount !== cells[id].amount) {\n      return false\n    }\n    if (nextProps.lightArray[id] !== lightArray[id]) {\n      return false\n    }\n  }\n  return true\n}\n\nconst TableRow = (props) => {\n  const {\n    id,\n    row,\n    cells,\n    rowSum,\n    lightArray,\n    onMouseEnterHandler,\n    onMouseLeaveHandler\n  } = props\n\n  const [showPercent, setShowPercent] = useState(false)\n\n  const onMouseEnterPercent = () => {\n    setShowPercent(true)\n  }\n\n  const onMouseLeavePercent = () => {\n    setShowPercent(false)\n  }\n\n  return (\n    <tr\n      id={id}\n    >\n      {row.map(cellId => {\n        return (\n          <TableCell\n            key={uuidv4()}\n            id={cellId}\n            cell={cells[cellId]}\n            onMouseEnterHandler={onMouseEnterHandler}\n            onMouseLeaveHandler={onMouseLeaveHandler}\n            lightArray={lightArray}\n            showPercent={showPercent}\n            percent={(cells[cellId].amount / rowSum * 100).toFixed(2)}\n          />\n        )\n      })}\n      <TableCellSum\n        rowSum={rowSum}\n        onMouseEnterPercent={onMouseEnterPercent}\n        onMouseLeavePercent={onMouseLeavePercent}\n      />\n    </tr>\n  )\n}\n\nTableRow.propTypes = TableRowShape.isRequired\n\nexport default React.memo(TableRow, areEqual)\n","import { createSelector } from 'reselect'\n\nexport const getRows = state => state.rows\n\nexport const getCells = state => state.cells\n\nexport const getColumns = state => state.columns\n\nexport const getTable = state => state.table\n\nexport const getRowsAmount = state => state.params.rowsAmount\n\nexport const getColumnsAmount = state => state.params.columnsAmount\n\nexport const getLightsAmount = state => state.params.lightsAmount\n\nexport const getRowSum = createSelector(\n  [getRows, getCells],\n  (rows, cells) => {\n    const sumArr = Object.values(rows).map(row => (\n      row.map(item => cells[item].amount).reduce((prev, cur) => prev + cur, 0)\n    ))\n\n    return sumArr\n  }\n)\n\nexport const getAverageRowSum = createSelector(\n  [getRows, getCells],\n  (rows, cells) => {\n    const onlyAmount = Object.values(rows).map(row => (\n      row.map(item => cells[item].amount)\n    ))\n\n    const res = []\n    for (let i = 0; i < onlyAmount.length; i++) {\n      for (let j = 0; j < onlyAmount[i].length; j++) {\n        res[j] = (res[j] || 0) + Math.floor(onlyAmount[i][j] / onlyAmount.length)\n      }\n    }\n\n    return res\n  }\n)\n","import React from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { AverageRowShape } from '../../helpers/shapes'\nimport { connect } from 'react-redux'\nimport { getAverageRowSum } from '../../helpers/selectors'\n\nconst AverageRow = ({ averageArray }) => {\n  return (\n    <>\n      {<tr>{averageArray.map(item => (\n        <td key={uuidv4()}>Average sum: {item}</td>\n      ))}\n      </tr>}\n    </>\n  )\n}\n\nAverageRow.propTypes = AverageRowShape.isRequired\n\nconst mapStateToProps = (state) => ({\n  averageArray: getAverageRowSum(state)\n})\n\nexport default connect(mapStateToProps)(React.memo(AverageRow))\n","import React, { useState } from 'react'\nimport { v4 as uuidv4 } from 'uuid'\nimport { connect } from 'react-redux'\nimport { TableShape } from '../../helpers/shapes'\nimport TableRow from '../TableRow/TableRow'\nimport AverageRow from '../AverageRow/AverageRow'\nimport { getRowSum, getLightsAmount } from '../../helpers/selectors'\nimport { getLightClosest } from '../../helpers/getLightClosest'\nimport './Table.css'\n\nconst Table = (props) => {\n  const {\n    table,\n    rows,\n    cells,\n    sumRowArray,\n    lightsAmount\n  } = props\n\n  const [lightArray, setLightArray] = useState({})\n\n  const onMouseEnterHandler = (id) => {\n    const arr = getLightClosest(id, cells, lightsAmount)\n    setLightArray(arr)\n  }\n\n  const onMouseLeaveHandler = () => {\n    setLightArray({})\n  }\n\n  return (\n    <>\n      {table.length > 0 && (\n        <table className=\"table table-dark\">\n          <tbody>\n            {table.map((rowId, index) => (\n              <TableRow\n                key={uuidv4()}\n                id={rowId}\n                rowSum={sumRowArray[index]}\n                row={rows[rowId]}\n                cells={cells}\n                lightArray={lightArray}\n                onMouseEnterHandler={onMouseEnterHandler}\n                onMouseLeaveHandler={onMouseLeaveHandler}\n              />\n            ))}\n            <AverageRow />\n          </tbody>\n        </table>\n      )}\n    </>\n  )\n}\n\nTable.propTypes = TableShape.isRequired\n\nconst mapStateToProps = state => ({\n  table: state.table,\n  rows: state.rows,\n  cells: state.cells,\n  sumRowArray: getRowSum(state),\n  lightsAmount: getLightsAmount(state)\n})\n\nexport default connect(mapStateToProps)(React.memo(Table))\n","export const getLightClosest = (id, cells, lightsAmount) => {\n  const arr = Object.values(cells).map(item => ({\n    ...item,\n    difference: Math.abs(item.amount - cells[id].amount)\n  })).sort((a, b) => a.difference - b.difference)\n    .slice(0, Number(lightsAmount))\n\n  const obj = {}\n\n  for (const item of arr) {\n    obj[item.id] = item\n  }\n\n  return obj\n}\n","import React from 'react'\nimport { ButtonDeleteShape } from '../../helpers/shapes'\n\nexport const ButtonDelete = (props) => {\n  const { deleteRow } = props\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-dark\"\n      onClick={deleteRow}\n    >\n      Delete row -\n    </button>\n  )\n}\n\nButtonDelete.propTypes = ButtonDeleteShape.isRequired\n","import React from 'react'\nimport { ButtonAddShape } from '../../helpers/shapes'\n\nexport const ButtonAdd = ({ addRow }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-dark\"\n      onClick={addRow}\n    >\n      Add row +\n    </button>\n  )\n}\n\nButtonAdd.propTypes = ButtonAddShape.isRequired\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport { generateTable } from '../../helpers/generate'\nimport { ButtonsShape } from '../../helpers/shapes'\nimport { ButtonDelete } from '../ButtonDelete/ButtonDelete'\nimport { ButtonAdd } from '../ButtonAdd/ButtonAdd'\nimport { getColumnsAmount } from '../../helpers/selectors'\nimport './Buttons.css'\nimport {\n  setNewRow,\n  removeRow\n} from '../../store/actions'\n\nconst Buttons = (props) => {\n  const {\n    showButtons,\n    setNewRow,\n    removeRow,\n    columnsAmount,\n    table\n  } = props\n\n  const addRow = () => {\n    const { table, rows, cells } = generateTable(1, columnsAmount)\n    setNewRow({ table, rows, cells })\n  }\n\n  const deleteRow = () => {\n    const lastIndex = table[table.length - 1]\n    removeRow({ lastIndex })\n  }\n\n  return (\n    <>\n      {showButtons && (\n        <div className=\"buttons\">\n          <ButtonDelete deleteRow={deleteRow} />\n          <ButtonAdd addRow={addRow} />\n        </div>\n      )}\n    </>\n  )\n}\n\nButtons.propTypes = ButtonsShape.isRequired\n\nconst mapStateToProps = state => ({\n  showButtons: state.buttons,\n  columnsAmount: getColumnsAmount(state),\n  table: state.table\n})\n\nconst mapDispatchToProps = dispatch => ({\n  setNewRow: (table, rows, cells) => dispatch(setNewRow(table, rows, cells)),\n  removeRow: (lastRow) => dispatch(removeRow(lastRow))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(React.memo(Buttons))\n","import React from 'react'\nimport Form from './components/Form/Form'\nimport Table from './components/Table/Table'\nimport Buttons from './components/Buttons/Buttons'\nimport './App.css'\n\nconst App = () => (\n  <div className=\"main\">\n    <Form />\n    <Buttons />\n    <Table/>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}