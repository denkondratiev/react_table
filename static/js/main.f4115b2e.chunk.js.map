{"version":3,"sources":["store/actions.tsx","store/reducers.tsx","store/store.tsx","helpers/generate.tsx","components/Form/Form.tsx","components/TableCell/TableCell.tsx","components/TableCellSum/TableCellSum.tsx","components/TableRow/TableRow.tsx","helpers/selectors.tsx","components/AverageRow/AverageRow.tsx","components/Table/Table.tsx","helpers/getLightClosest.tsx","components/ButtonDelete/ButtonDelete.tsx","components/ButtonAdd/ButtonAdd.tsx","components/Buttons/Buttons.tsx","App.tsx","index.tsx"],"names":["ACTION_TYPES","rootReducer","combineReducers","params","state","action","SET_PARAMS","type","payload","table","SET_TABLE","ADD_ROW","REMOVE_ROW","filter","id","lastRow","rows","SET_ROWS","cells","SET_CELLS","INCREMENT","amount","buttons","SHOW_BUTTONS","store","createStore","generateTable","rowsAmount","columnsAmount","i","Number","rowId","uuidv4","j","cellId","Math","floor","random","React","memo","dispatch","useDispatch","useState","lightsAmount","inputValue","setInputValue","error","setError","handleGenerateTable","event","preventDefault","setTable","setRows","setCells","setShowButtons","errorObj","onChangeHandler","currentTarget","name","value","className","onSubmit","placeholder","onChange","props","styleString","onMouseEnterHandler","onMouseLeaveHandler","onClickIncrement","styleObj","background","onClick","onMouseEnter","onMouseLeave","style","prevProps","nextProps","rowSum","onMouseEnterPercent","onMouseLeavePercent","row","lightList","showPercent","setShowPercent","map","percent","toFixed","key","getRows","getCells","getTable","getColumnsAmount","getLightsAmount","getShowButtons","getRowSum","createSelector","Object","values","item","reduce","prev","cur","getAverageRowSum","onlyAmount","res","length","averageArray","useSelector","index","setLightList","sumRowArray","obj","arr","difference","abs","sort","a","b","slice","getLightClosest","ButtonDelete","deleteRow","ButtonAdd","addRow","Buttons","showButtons","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f4115b2e.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SET_PARAMS: 'SET::PARAMS',\n  SET_TABLE: 'SET::TABLE',\n  SET_ROWS: 'SET::ROWS',\n  SET_CELLS: 'SET::CELLS',\n  SHOW_BUTTONS: 'SHOW::BUTTONS',\n  INCREMENT: 'INCREMENT',\n  ADD_ROW: 'ADD::ROW',\n  REMOVE_ROW: 'REMOVE::ROW'\n}\n\n// TYPES\n\nexport type State = {\n  table: Array<string>\n  rows: RowsParams\n  cells: CellsParams\n  params: Params\n  buttons: boolean\n}\n\nexport type Action = (\n  | ReturnType<typeof setParams>\n  | ReturnType<typeof setTable>\n  | ReturnType<typeof setRows>\n  | ReturnType<typeof setCells>\n  | ReturnType<typeof setShowButtons>\n  | ReturnType<typeof increment>\n  | ReturnType<typeof setNewRow>\n  | ReturnType<typeof removeRow>\n)\n\nexport type Params = {\n  [name: string]: string\n}\n\nexport type RowsParams = {\n  [name: string]: Array<string>\n}\n\nexport type CellsParams = {\n  [name: string]: { id: string, amount: number }\n}\n\n\nexport type NewRowsParams = {\n  table: Array<string>\n  rows: RowsParams | any\n  cells: CellsParams | any\n}\n\n// ACTIONS\n\nexport const setParams = (params: Params) => ({\n  payload: params,\n  type: ACTION_TYPES.SET_PARAMS\n})\n\nexport const setTable = (params: Array<string>) => ({\n  payload: params,\n  type: ACTION_TYPES.SET_TABLE\n})\n\nexport const setRows = (params: RowsParams) => ({\n  payload: params,\n  type: ACTION_TYPES.SET_ROWS\n})\n\nexport const setCells = (params: CellsParams) => ({\n  payload: params,\n  type: ACTION_TYPES.SET_CELLS\n})\n\nexport const setShowButtons = (params: boolean) => ({\n  payload: params,\n  type: ACTION_TYPES.SHOW_BUTTONS\n})\n\nexport const increment = (params: string) => ({\n  payload: params,\n  type: ACTION_TYPES.INCREMENT\n})\n\nexport const setNewRow = (params: NewRowsParams) => ({\n  payload: params,\n  type: ACTION_TYPES.ADD_ROW\n})\n\nexport const removeRow = (params: any) => ({\n  payload: params,\n  type: ACTION_TYPES.REMOVE_ROW\n})\n","import { combineReducers } from 'redux'\nimport { ACTION_TYPES } from './actions'\nimport { Action, Params, RowsParams, CellsParams } from './actions'\n\nconst paramsReducer = (state: Params = {}, action: Action): Params => {\n  const { SET_PARAMS } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_PARAMS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nfunction tableReducer (state: Array<string> = [], action: Action): Array<string> {\n  const { SET_TABLE, ADD_ROW, REMOVE_ROW } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_TABLE:\n      return action.payload\n    case ADD_ROW:\n      return [...state, action.payload.table]\n    case REMOVE_ROW:\n      return state.filter(id => id !== action.payload.lastRow)\n    default:\n      return state\n  }\n}\n\nconst rowsReducer = (state: RowsParams = {}, action: Action): RowsParams => {\n  const { SET_ROWS, ADD_ROW, REMOVE_ROW } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_ROWS:\n      return action.payload\n    case ADD_ROW:\n      return { ...state, ...action.payload.rows }\n    case REMOVE_ROW:\n      delete state[action.payload.lastRow]\n      return state\n    default:\n      return state\n  }\n}\n\n\nconst cellsReducer = (state: CellsParams = {}, action: Action): CellsParams => {\n  const { SET_CELLS, INCREMENT, ADD_ROW } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_CELLS:\n      return action.payload\n    case ADD_ROW:\n      return { ...state, ...action.payload.cells }\n    case INCREMENT:\n      return {\n        ...state,\n        [action.payload]: {\n          ...state[action.payload],\n          amount: state[action.payload].amount + 1\n        }\n      }\n    default:\n      return state\n  }\n}\n\nconst buttonsReducer = (state: boolean = false, action: Action): boolean => {\n  const { SHOW_BUTTONS } = ACTION_TYPES\n\n  switch (action.type) {\n    case SHOW_BUTTONS:\n      return action.payload\n    default:\n      return state\n  }\n}\n\nexport const rootReducer = combineReducers({\n  params: paramsReducer,\n  table: tableReducer,\n  rows: rowsReducer,\n  cells: cellsReducer,\n  buttons: buttonsReducer\n})\n","import { createStore } from 'redux'\nimport { rootReducer } from './reducers'\n\nconst store = createStore(rootReducer)\n\nexport default store\n","import { v4 as uuidv4 } from 'uuid'\nimport { RowsParams, CellsParams } from '../store/actions'\n\nexport const generateTable = (rowsAmount: string | number, columnsAmount: string) => {\n  const table: Array<string> = []\n  const rows: RowsParams = {}\n  const cells: CellsParams = {}\n\n  for (let i = 0; i < Number(rowsAmount); i++) {\n    const rowId = uuidv4()\n    table[i] = rowId\n    rows[rowId] = []\n\n    for (let j = 0; j < Number(columnsAmount); j++) {\n      const cellId = uuidv4()\n      rows[rowId][j] = cellId\n\n      cells[cellId] = {\n        id: cellId,\n        amount: Math.floor(Math.random() * 999)\n      }\n    }\n  }\n\n  return { table, rows, cells }\n}\n","import React, { useState } from 'react'\nimport { generateTable } from '../../helpers/generate'\nimport { useDispatch } from 'react-redux'\nimport './Form.css'\nimport {\n  setParams,\n  setTable,\n  setRows,\n  setCells,\n  setShowButtons,\n} from '../../store/actions'\n\ntype InputValue = {\n  rowsAmount: string,\n  columnsAmount: string,\n  lightsAmount: string\n}\n\nconst Form: React.FC = () => {\n\n  const dispatch = useDispatch()\n\n  const [inputValue, setInputValue] = useState<InputValue>({\n    rowsAmount: '',\n    columnsAmount: '',\n    lightsAmount: ''\n  })\n\n  const [error, setError] = useState<{ [name: string]: boolean }>({\n    rowsAmount: false,\n    columnsAmount: false,\n    lightsAmount: false\n  })\n\n  const handleGenerateTable = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault()\n\n    const rowsAmount = inputValue.rowsAmount\n    const columnsAmount = inputValue.columnsAmount\n    const lightsAmount = inputValue.lightsAmount\n\n    if (Number(rowsAmount) > 0 && Number(columnsAmount) > 0 && Number(lightsAmount) > 0) {\n      const { table, rows, cells } = generateTable(rowsAmount, columnsAmount)\n\n      dispatch(setParams({ rowsAmount, columnsAmount, lightsAmount }))\n      dispatch(setTable(table))\n      dispatch(setRows(rows))\n      dispatch(setCells(cells))\n      dispatch(setShowButtons(true))\n\n      setInputValue({\n        rowsAmount: '',\n        columnsAmount: '',\n        lightsAmount: ''\n      })\n    }\n\n    const errorObj = {\n      rowsAmount: false,\n      columnsAmount: false,\n      lightsAmount: false\n    }\n\n    if (!rowsAmount || Number(rowsAmount) <= 0) {\n      errorObj.rowsAmount = true\n    }\n\n    if (!columnsAmount || Number(columnsAmount) <= 0) {\n      errorObj.columnsAmount = true\n    }\n\n    if (!lightsAmount || Number(lightsAmount) <= 0) {\n      errorObj.lightsAmount = true\n    }\n\n    setError({\n      rowsAmount: errorObj.rowsAmount,\n      columnsAmount: errorObj.columnsAmount,\n      lightsAmount: errorObj.lightsAmount\n    })\n  }\n\n  const onChangeHandler = (event: React.FormEvent<HTMLInputElement>): void => {\n    const { name, value } = event.currentTarget\n    setError({ [name]: false })\n    setInputValue({ ...inputValue, [name]: value })\n  }\n\n  return (\n    <form className=\"form\" onSubmit={(event) => handleGenerateTable(event)}>\n      {\n        error.rowsAmount && (\n          <div>\n              Please add correct rows value\n          </div>\n        )\n      }\n      <input\n        type=\"number\"\n        name=\"rowsAmount\"\n        className={`form-control ${error.rowsAmount && 'error'}`}\n        placeholder=\"Rows...\"\n        onChange={(event) => onChangeHandler(event)}\n        value={inputValue.rowsAmount}\n      />\n      {\n        error.columnsAmount && (\n          <div>\n              Please add correct columns value\n          </div>\n        )\n      }\n      <input\n        type=\"number\"\n        name=\"columnsAmount\"\n        className={`form-control ${error.columnsAmount && 'error'}`}\n        placeholder=\"Columns...\"\n        onChange={(event) => onChangeHandler(event)}\n        value={inputValue.columnsAmount}\n      />\n      {\n        error.lightsAmount && (\n          <div>\n              Please add correct highlight value\n          </div>\n        )\n      }\n      <input\n        type=\"number\"\n        name=\"lightsAmount\"\n        className={`form-control ${error.lightsAmount && 'error'}`}\n        placeholder=\"Highlight cells...\"\n        onChange={(event) => onChangeHandler(event)}\n        value={inputValue.lightsAmount}\n      />\n      <button\n        type=\"submit\"\n        className=\"btn btn-dark\"\n      >\n        Generate\n      </button>\n    </form>\n  )\n}\n\nexport default React.memo(Form)\n","import React from 'react'\nimport { TableCellProps } from '../../helpers/interface'\nimport './TableCell.css'\n\nconst areEqual = (prevProps: TableCellProps, nextProps: TableCellProps) => {\n  const { id, amount, styleString } = prevProps\n\n  if (nextProps.styleString !== styleString) {\n    return false\n  }\n  if (nextProps.amount !== amount) {\n    return false\n  }\n  if (nextProps.id !== id) {\n    return false\n  }\n  return true\n}\n\nconst TableCell: React.FC<TableCellProps> = (props) => {\n  const {\n    id,\n    amount,\n    styleString,\n    onMouseEnterHandler,\n    onMouseLeaveHandler,\n    onClickIncrement\n  } = props\n\n  const styleObj = {\n    background: `${styleString}`\n  }\n\n  return (\n    <td\n      id={id}\n      onClick={(event) => onClickIncrement(event)}\n      onMouseEnter={(event) => onMouseEnterHandler(event)}\n      onMouseLeave={onMouseLeaveHandler}\n      style={styleObj}\n    >\n      {amount}\n    </td>\n  )\n}\n\nexport default React.memo(TableCell, areEqual)\n","import React from 'react'\nimport { TableCellSumProps } from '../../helpers/interface'\n\nconst areEqual = (prevProps: TableCellSumProps, nextProps: TableCellSumProps) => {\n  const { rowSum } = prevProps\n\n  if (nextProps.rowSum !== rowSum) {\n    return false\n  }\n  return true\n}\n\nconst TableCellSum: React.FC<TableCellSumProps> = (props) => {\n  const {\n    rowSum,\n    onMouseEnterPercent,\n    onMouseLeavePercent\n  } = props\n\n  return (\n    <td\n      onMouseEnter={onMouseEnterPercent}\n      onMouseLeave={onMouseLeavePercent}\n    >\n      Sum: {rowSum}\n    </td>\n\n  )\n}\n\nexport default React.memo(TableCellSum, areEqual)\n","import React, { useState } from 'react'\nimport { TableRowProps } from '../../helpers/interface'\nimport TableCell from '../TableCell/TableCell'\nimport TableCellSum from '../TableCellSum/TableCellSum'\n\nconst areEqual = (prevProps: TableRowProps, nextProps: TableRowProps) => {\n  const { row, cells, lightList } = prevProps\n\n  for (const id of row) {\n    if (nextProps.cells[id].amount !== cells[id].amount) {\n      return false\n    }\n    if (nextProps.lightList[id] !== lightList[id]) {\n      return false\n    }\n  }\n  return true\n}\n\nconst TableRow: React.FC<TableRowProps> = (props) => {\n  const {\n    id,\n    row,\n    cells,\n    rowSum,\n    lightList,\n    onMouseEnterHandler,\n    onMouseLeaveHandler,\n    onClickIncrement\n  } = props\n\n  const [showPercent, setShowPercent] = useState(false)\n\n  const onMouseEnterPercent = () => {\n    setShowPercent(true)\n  }\n\n  const onMouseLeavePercent = () => {\n    setShowPercent(false)\n  }\n\n  return (\n    <tr\n      id={id}\n    >\n      {row.map(cellId => {\n        const value = cells[cellId].amount\n        const percent = (cells[cellId].amount / rowSum * 100).toFixed(2)\n        let styleString = ''\n\n        if (lightList[cellId]) { styleString += '#6c757d' }\n\n        if (showPercent) {\n          styleString += `linear-gradient(90deg, rgba(220,53,69,1) ${percent}%, rgba(108,117,125,1) ${percent}%)`\n        }\n\n        return (\n          <TableCell\n            key={cellId}\n            id={cellId}\n            amount={showPercent ? percent : value}\n            styleString={styleString}\n            onMouseEnterHandler={onMouseEnterHandler}\n            onMouseLeaveHandler={onMouseLeaveHandler}\n            onClickIncrement={onClickIncrement}\n          />\n        )\n      })}\n      <TableCellSum\n        rowSum={rowSum}\n        onMouseEnterPercent={onMouseEnterPercent}\n        onMouseLeavePercent={onMouseLeavePercent}\n      />\n    </tr>\n  )\n}\n\nexport default React.memo(TableRow, areEqual)\n","import { createSelector } from 'reselect'\nimport type { State } from '../store/actions'\n\nexport const getRows = (state: State) => state.rows\n\nexport const getCells = (state: State) => state.cells\n\nexport const getTable = (state: State) => state.table\n\nexport const getRowsAmount = (state: State) => state.params.rowsAmount\n\nexport const getColumnsAmount = (state: State) => state.params.columnsAmount\n\nexport const getLightsAmount = (state: State) => state.params.lightsAmount\n\nexport const getShowButtons = (state: State) => state.buttons\n\nexport const getRowSum = createSelector(\n  [getRows, getCells],\n  (rows, cells) => {\n    const sumArr = Object.values(rows).map(row => (\n      row.map(item => cells[item].amount).reduce((prev, cur) => prev + cur, 0)\n    ))\n\n    return sumArr\n  }\n)\n\nexport const getAverageRowSum = createSelector(\n  [getRows, getCells],\n  (rows, cells) => {\n    const onlyAmount = Object.values(rows).map(row => (\n      row.map(item => cells[item].amount)\n    ))\n\n    const res: number[] = []\n    for (let i = 0; i < onlyAmount.length; i++) {\n      for (let j = 0; j < onlyAmount[i].length; j++) {\n        res[j] = (res[j] || 0) + Math.floor(onlyAmount[i][j] / onlyAmount.length)\n      }\n    }\n\n    return res\n  }\n)\n","import React from 'react'\nimport { getAverageRowSum } from '../../helpers/selectors'\nimport { useSelector } from 'react-redux'\n\nconst AverageRow: React.FC = () => {\n  const averageArray = useSelector(getAverageRowSum)\n\n  return (\n    <>\n      {<tr>{averageArray.map((item, index) => (\n        <td key={index}>Average sum: {item}</td>\n      ))}\n      </tr>}\n    </>\n  )\n}\n\nexport default React.memo(AverageRow)\n","import React, { useState, SyntheticEvent } from 'react'\nimport TableRow from '../TableRow/TableRow'\nimport AverageRow from '../AverageRow/AverageRow'\nimport { getLightClosest } from '../../helpers/getLightClosest'\nimport { getRowSum, getLightsAmount, getTable, getRows, getCells } from '../../helpers/selectors'\nimport { increment } from '../../store/actions'\nimport './Table.css'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst Table: React.FC = ()  => {\n  const [lightList, setLightList] = useState({})\n  const dispatch = useDispatch();\n\n  const table = useSelector(getTable);\n  const lightsAmount = useSelector(getLightsAmount);\n  const rows = useSelector(getRows);\n  const cells = useSelector(getCells);\n  const sumRowArray = useSelector(getRowSum)\n\n  const onMouseEnterHandler = (event: SyntheticEvent<HTMLTableCellElement>) => {\n    const { id } = event.currentTarget\n    const obj = getLightClosest(id, cells, lightsAmount)\n    setLightList(obj)\n  }\n\n  const onMouseLeaveHandler = (): void => {\n    setLightList({})\n  }\n\n  const onClickIncrement = (event: SyntheticEvent<HTMLTableCellElement>) => {\n    const { id } = event.currentTarget\n    dispatch(increment(id))\n  }\n\n  return (\n    <>\n      {table.length > 0 && (\n        <table className=\"table table-dark\">\n          <tbody>\n            {table.map((rowId: string, index: number) => (\n              <TableRow\n                key={rowId}\n                id={rowId}\n                rowSum={sumRowArray[index]}\n                row={rows[rowId]}\n                cells={cells}\n                lightList={lightList}\n                onMouseEnterHandler={onMouseEnterHandler}\n                onMouseLeaveHandler={onMouseLeaveHandler}\n                onClickIncrement={onClickIncrement}\n              />\n            ))}\n            <AverageRow />\n          </tbody>\n        </table>\n      )}\n    </>\n  )\n}\n\nexport default React.memo(Table)\n","import { CellsParams } from '../store/actions'\n\nexport const getLightClosest = (id: string, cells: CellsParams, lightsAmount: string) => {\n  const arr = Object.values(cells).map(item => ({\n    ...item,\n    difference: Math.abs(item.amount - cells[id].amount)\n  })).sort((a, b) => a.difference - b.difference)\n    .slice(0, Number(lightsAmount))\n    .map(item => item.id)\n\n  const obj: { [name: string]: boolean } = {}\n\n  for (const id of arr) {\n    obj[id] = true\n  }\n\n  return obj\n}\n","import React from 'react'\n\ninterface Props {\n  deleteRow: () => void\n}\n\nexport const ButtonDelete: React.FC<Props> = (props) => {\n  const { deleteRow } = props\n\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-dark\"\n      onClick={deleteRow}\n    >\n      Delete row -\n    </button>\n  )\n}\n","import React from 'react'\n\ninterface Props {\n  addRow: () => void\n}\n\nexport const ButtonAdd: React.FC<Props> = ({ addRow }) => {\n  return (\n    <button\n      type=\"button\"\n      className=\"btn btn-dark\"\n      onClick={addRow}\n    >\n      Add row +\n    </button>\n  )\n}\n","import React from 'react'\nimport { generateTable } from '../../helpers/generate'\nimport { ButtonDelete } from '../ButtonDelete/ButtonDelete'\nimport { ButtonAdd } from '../ButtonAdd/ButtonAdd'\nimport { getColumnsAmount, getTable, getShowButtons } from '../../helpers/selectors'\nimport './Buttons.css'\nimport { setNewRow, removeRow } from '../../store/actions'\nimport { useDispatch, useSelector } from 'react-redux'\n\nconst Buttons: React.FC = () => {\n  const dispatch = useDispatch()\n\n  const columnsAmount = useSelector(getColumnsAmount)\n  const table = useSelector(getTable)\n  const showButtons = useSelector(getShowButtons)\n\n  const addRow = (): void => {\n    const { table, rows, cells } = generateTable(1, columnsAmount)\n    dispatch(setNewRow({ table, rows, cells}))\n  }\n\n  const deleteRow = (): void => {\n    const lastRow = table[table.length - 1]\n    dispatch(removeRow({ lastRow }))\n  }\n\n  return (\n    <>\n      {showButtons && (\n        <div className=\"buttons\">\n          <ButtonDelete deleteRow={deleteRow} />\n          <ButtonAdd addRow={addRow} />\n        </div>\n      )}\n    </>\n  )\n}\n\nexport default Buttons\n","import React from 'react'\nimport Form from './components/Form/Form'\nimport Table from './components/Table/Table'\nimport Buttons from './components/Buttons/Buttons'\nimport './App.css'\n\nconst App: React.FC = () => (\n  <div className=\"main\">\n    <Form />\n    <Buttons />\n    <Table />\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/store'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}