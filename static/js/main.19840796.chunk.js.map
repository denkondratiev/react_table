{"version":3,"sources":["store/actions.js","store/reducers.js","helpers/shapes.js","helpers/helpers.js","components/Form/Form.jsx","components/TableItem/TableItem.jsx","components/Table/Table.jsx","components/Buttons/Buttons.jsx","App.jsx","index.jsx"],"names":["ACTION_TYPES","setRows","param","payload","Number","type","setTable","store","createStore","state","action","SET_COLUMNS","SET_ROWS","SET_HIGHLIGHT","SET_TABLE","SET_SHOW_TABLE","SET_SHOW_BUTTONS","table","columns","rows","highlights","showTable","showButtons","window","__REDUX_DEVTOOLS_EXTENSION__","PropTypes","shape","number","array","bool","amount","id","percent","isLight","randomGenerate","item","Math","floor","random","uuidv4","showPercent","connect","props","useState","showForm","setShowForm","error","setError","handleAddData","event","preventDefault","matrix","Array","keys","map","dispatch","setShowButtons","errorObj","highlight","setColumnsHandler","name","value","replace","setHighlightsHandler","className","onSubmit","placeholder","maxLength","onChange","setRowsHandler","target","stylePercent","backgroundImage","onClick","newTable","incrementCell","onMouseOver","lightArray","difference","abs","sort","a","b","slice","some","lightItem","onMouseOut","style","tableCopy","rowLine","columnLine","onlyAmount","averageColumnSum","_","index","sum","i","length","onMouseOutHandler","row","oneRow","splice","rowSum","reduce","prev","cur","key","toFixed","onMouseOverHandler","newRow","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.19840796.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SET_COLUMNS: 'SET::COLUMNS',\n  SET_ROWS: 'SET::ROWS',\n  SET_TABLE: 'SET::TABLE',\n  SET_HIGHLIGHT: 'SET::HIGHLIGHT',\n  SET_SHOW_TABLE: 'SET::SHOW::TABLE',\n  SET_SHOW_BUTTONS: 'SET::SHOW::BUTTONS'\n}\n\nexport const setColumns = (param) => ({\n  payload: param === '' ? '' : Number(param),\n  type: ACTION_TYPES.SET_COLUMNS\n})\n\nexport const setRows = (param) => ({\n  payload: param === '' ? '' : Number(param),\n  type: ACTION_TYPES.SET_ROWS\n})\n\nexport const setHighlights = (param) => ({\n  payload: param === '' ? '' : Number(param),\n  type: ACTION_TYPES.SET_HIGHLIGHT\n})\n\nexport const setTable = (param) => ({\n  payload: param,\n  type: ACTION_TYPES.SET_TABLE\n})\n\nexport const setShowTable = (param) => ({\n  payload: param,\n  type: ACTION_TYPES.SET_SHOW_TABLE\n})\n\nexport const setShowButtons = (param) => ({\n  payload: param,\n  type: ACTION_TYPES.SET_SHOW_BUTTONS\n})\n","import { createStore } from 'redux'\nimport { ACTION_TYPES } from './actions'\n\nfunction rootReducer (state, action) {\n  const {\n    SET_COLUMNS,\n    SET_ROWS,\n    SET_HIGHLIGHT,\n    SET_TABLE,\n    SET_SHOW_TABLE,\n    SET_SHOW_BUTTONS\n  } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_TABLE: {\n      return {\n        ...state,\n        table: action.payload\n      }\n    }\n\n    case SET_COLUMNS: {\n      return {\n        ...state,\n        columns: action.payload\n      }\n    }\n\n    case SET_ROWS: {\n      return {\n        ...state,\n        rows: action.payload\n      }\n    }\n\n    case SET_HIGHLIGHT: {\n      return {\n        ...state,\n        highlights: action.payload\n      }\n    }\n\n    case SET_SHOW_TABLE: {\n      return {\n        ...state,\n        showTable: action.payload\n      }\n    }\n\n    case SET_SHOW_BUTTONS: {\n      return {\n        ...state,\n        showButtons: action.payload\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst initialState = {\n  rows: '',\n  columns: '',\n  highlights: '',\n  table: [],\n  showTable: false,\n  showButtons: false\n}\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store\n","import PropTypes from 'prop-types'\n\nexport const TableShape = PropTypes.shape({\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  table: PropTypes.array,\n  showTable: PropTypes.bool\n})\n\nexport const FormShape = PropTypes.shape({\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  highlights: PropTypes.number\n})\n\nexport const TableItemShape = PropTypes.shape({\n  amount: PropTypes.number,\n  id: PropTypes.number,\n  percent: PropTypes.number,\n  table: PropTypes.array,\n  highlights: PropTypes.number,\n  isLight: PropTypes.bool\n})\n\nexport const ButtonsShape = PropTypes.shape({\n  showButtons: PropTypes.bool,\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  table: PropTypes.array\n})\n","import { v4 as uuidv4 } from 'uuid'\n\nexport const randomGenerate = item => ({\n  amount: Math.floor(Math.random() * 999),\n  id: uuidv4(),\n  isLight: false,\n  showPercent: false\n})\n","import React, { useState } from 'react'\nimport { FormShape } from '../../helpers/shapes'\nimport { randomGenerate } from '../../helpers/helpers'\nimport { connect } from 'react-redux'\nimport store from '../../store/reducers'\nimport './Form.css'\nimport {\n  setColumns,\n  setRows,\n  setHighlights,\n  setTable,\n  setShowTable,\n  setShowButtons\n} from '../../store/actions'\n\nconst Form = (props) => {\n  const { rows, columns, highlights } = props\n\n  const [showForm, setShowForm] = useState(true)\n  const [error, setError] = useState({ rows: false, columns: false, highlights: false })\n\n  const handleAddData = (event) => {\n    event.preventDefault()\n\n    if (rows && columns && highlights) {\n      const matrix = [...Array(columns * rows).keys()].map(randomGenerate)\n\n      store.dispatch(setTable(matrix))\n      store.dispatch(setShowTable(true))\n      store.dispatch(setShowButtons(true))\n\n      setShowForm(false)\n    }\n\n    const errorObj = {\n      rows: null,\n      columns: null,\n      highlight: null\n    }\n\n    if (!rows) {\n      errorObj.rows = true\n    }\n\n    if (!columns) {\n      errorObj.columns = true\n    }\n\n    if (!highlights) {\n      errorObj.highlights = true\n    }\n\n    setError({\n      rows: errorObj.rows,\n      columns: errorObj.columns,\n      highlights: errorObj.highlights\n    })\n  }\n\n  const setColumnsHandler = ({ name, value }) => {\n    setError({ columns: false })\n    store.dispatch(setColumns(value.replace(/[^1-9]/, '')))\n  }\n  const setRowsHandler = ({ name, value }) => {\n    setError({ rows: false })\n    store.dispatch(setRows(value.replace(/[^1-9]/, '')))\n  }\n  const setHighlightsHandler = ({ name, value }) => {\n    setError({ highlights: false })\n    store.dispatch(setHighlights(value.replace(/[^1-9]/, '')))\n  }\n\n  return (\n    showForm && (\n      <form className=\"form\" onSubmit={(event) => handleAddData(event)}>\n        {\n          error.rows && (\n            <div>\n              Please add rows value\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"rows\"\n          className={`form-control ${error.rows && 'error'}`}\n          placeholder=\"Rows...\"\n          maxLength=\"2\"\n          onChange={(event) => setRowsHandler(event.target)}\n          value={rows}\n        />\n        {\n          error.columns && (\n            <div>\n              Please add columns value\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"columns\"\n          className={`form-control ${error.columns && 'error'}`}\n          placeholder=\"Columns...\"\n          maxLength=\"2\"\n          onChange={(event) => setColumnsHandler(event.target)}\n          value={columns}\n        />\n        {\n          error.highlights && (\n            <div>\n              Please add highlight value\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"highlights\"\n          className={`form-control ${error.highlights && 'error'}`}\n          placeholder=\"Highlight cells...\"\n          maxLength=\"2\"\n          onChange={(event) => setHighlightsHandler(event.target)}\n          value={highlights}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn btn-dark\"\n        >\n          Generate\n        </button>\n      </form>\n    )\n  )\n}\n\nForm.propTypes = FormShape.isRequired\n\nconst mapStateToProps = state => ({\n  columns: state.columns,\n  rows: state.rows,\n  highlights: state.highlights\n})\n\nexport default connect(mapStateToProps)(Form)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport store from '../../store/reducers'\nimport { setTable } from '../../store/actions'\nimport { TableItemShape } from '../../helpers/shapes'\nimport './TableItem.css'\n\nconst TableItem = (props) => {\n  const {\n    amount,\n    id,\n    percent,\n    table,\n    highlights,\n    isLight,\n    showPercent\n  } = props\n\n  const stylePercent = {\n    backgroundImage: `linear-gradient(90deg, rgba(220,53,69,1) ${percent}%, rgba(108,117,125,1) ${percent}%)`\n  }\n\n  const incrementCell = (id) => {\n    const newTable = table.map(item => (\n      item.id === id\n        ? {\n          ...item,\n          amount: item.amount + 1\n        }\n        : item\n    ))\n\n    store.dispatch(setTable(newTable))\n  }\n\n  const onMouseOverHandler = () => {\n    const lightArray = table.map(item => ({\n      ...item,\n      difference: Math.abs(item.amount - amount)\n    })).sort((a, b) => a.difference - b.difference).slice(0, highlights + 1)\n\n    const newTable = table.map(item => (\n      lightArray.some(lightItem => lightItem.id === item.id)\n        ? { ...item, isLight: true }\n        : { ...item, isLight: false }\n    ))\n\n    store.dispatch(setTable(newTable))\n  }\n\n  const onMouseOutHandler = () => {\n    const newTable = table.map(item => ({\n      ...item,\n      isLight: false\n    }))\n\n    store.dispatch(setTable(newTable))\n  }\n\n  return (\n    <td\n      id={id}\n      className={`${isLight ? 'table-item--light' : ''}`}\n      onClick={(event) => incrementCell(event.target.id)}\n      onMouseOver={onMouseOverHandler}\n      onMouseOut={onMouseOutHandler}\n      style={showPercent ? stylePercent : {}}\n    >\n      {\n        showPercent\n          ? `${percent}%`\n          : amount\n      }\n    </td>\n  )\n}\n\nTableItem.propTypes = TableItemShape.isRequired\n\nconst mapStateToProps = state => ({\n  table: state.table,\n  highlights: state.highlights\n})\n\nexport default connect(mapStateToProps)(TableItem)\n","import React from 'react'\nimport './Table.css'\nimport { v4 as uuidv4 } from 'uuid'\nimport { connect } from 'react-redux'\nimport store from '../../store/reducers'\nimport { setTable } from '../../store/actions'\nimport { TableShape } from '../../helpers/shapes'\nimport TableItem from '../TableItem/TableItem'\n\nconst Table = (props) => {\n  const {\n    rows,\n    columns,\n    table,\n    showTable\n  } = props\n\n  const tableCopy = [...table]\n  const rowLine = [...Array(rows).keys()]\n  const columnLine = [...Array(columns).keys()]\n  const onlyAmount = table.map(item => item.amount)\n\n  const averageColumnSum = columnLine.map((_, index) => {\n    let sum = 0\n    for (let i = index; i < onlyAmount.length; i += columns) {\n      sum += onlyAmount[i]\n    }\n    return Math.floor(sum / rows)\n  })\n\n  const onMouseOverHandler = (id) => {\n    const lightArray = table.slice(id * columns, (id * columns) + columns)\n\n    const newTable = table.map(item => (\n      lightArray.some(lightItem => lightItem.id === item.id)\n        ? { ...item, showPercent: true }\n        : { ...item, showPercent: false }\n    ))\n\n    store.dispatch(setTable(newTable))\n  }\n\n  const onMouseOutHandler = () => {\n    const newTable = table.map(item => ({\n      ...item,\n      showPercent: false\n    }))\n\n    store.dispatch(setTable(newTable))\n  }\n\n  return (\n    <>\n      {showTable && (\n        <table className=\"table table-dark\">\n          <tbody>\n            {rowLine.map(row => {\n              const oneRow = tableCopy.splice(0, columns)\n              const rowSum = oneRow.map(item => item.amount).reduce((prev, cur) => prev + cur, 0)\n              return (\n                <tr key={row}>\n                  {oneRow.map(item => (\n                    <TableItem\n                      key={item.id}\n                      id={item.id}\n                      amount={item.amount}\n                      percent={(item.amount / rowSum * 100).toFixed(2)}\n                      isLight={item.isLight}\n                      showPercent={item.showPercent}\n                    />\n                  ))}\n                  <td\n                    id={row}\n                    onMouseOver={(event) => onMouseOverHandler(event.target.id)}\n                    onMouseOut ={onMouseOutHandler}\n                  >Sum: {rowSum}</td>\n                </tr>\n              )\n            })}\n            {<tr>{averageColumnSum.map(item => (\n              <td key={uuidv4()}>Average sum: {item}</td>\n            ))}\n            </tr>}\n          </tbody>\n        </table>\n      )}\n    </>\n  )\n}\n\nTable.propTypes = TableShape.isRequired\n\nconst mapStateToProps = (state) => ({\n  columns: state.columns,\n  table: state.table,\n  rows: state.rows,\n  showTable: state.showTable\n})\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport store from '../../store/reducers'\nimport { connect } from 'react-redux'\nimport { setRows, setTable } from '../../store/actions'\nimport { randomGenerate } from '../../helpers/helpers'\nimport { ButtonsShape } from '../../helpers/shapes'\nimport './Buttons.css'\n\nconst Buttons = (props) => {\n  const { showButtons, rows, columns, table } = props\n\n  const deleteRow = (event) => {\n    if (rows > 1) {\n      store.dispatch(setRows(rows - 1))\n      store.dispatch(setTable(table.splice(0, table.length - columns)))\n    }\n  }\n\n  const addRow = (event) => {\n    store.dispatch(setRows(rows + 1))\n\n    const newRow = [...Array(columns).keys()].map(randomGenerate)\n\n    store.dispatch(setTable([...table, ...newRow]))\n  }\n\n  return (\n    <>\n      {showButtons && (\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className=\"btn btn-dark\"\n            onClick={deleteRow}\n          >\n            Delete row -\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-dark\"\n            onClick={addRow}\n          >\n            Add row +\n          </button>\n        </div>\n      )}\n    </>\n  )\n}\n\nButtons.propTypes = ButtonsShape.isRequired\n\nconst mapStateToProps = state => ({\n  showButtons: state.showButtons,\n  rows: state.rows,\n  columns: state.columns,\n  table: state.table\n})\n\nexport default connect(mapStateToProps)(Buttons)\n","import React from 'react'\nimport Form from './components/Form/Form'\nimport Table from './components/Table/Table'\nimport Buttons from './components/Buttons/Buttons'\nimport './App.css'\n\nconst App = () => (\n  <div className=\"main\">\n    <Form />\n    <Buttons />\n    <Table/>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/reducers'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}