{"version":3,"sources":["store/actions.js","store/reducers.js","helpers/shapes.js","helpers/helpers.js","components/Form/Form.jsx","components/TableItem/TableItem.jsx","components/Table/Table.jsx","components/Buttons/Buttons.jsx","App.jsx","index.jsx"],"names":["ACTION_TYPES","setRows","param","payload","type","setTable","store","createStore","state","action","SET_COLUMNS","SET_ROWS","SET_HIGHLIGHT","SET_TABLE","SET_SHOW_TABLE","SET_SHOW_BUTTONS","table","columns","rows","highlights","showTable","showButtons","window","__REDUX_DEVTOOLS_EXTENSION__","PropTypes","shape","string","bool","cell","array","incrementCell","func","number","handleAddData","onChangeInput","showForm","error","amount","id","percent","isLight","deleteRow","addRow","randomGenerate","item","Math","floor","random","uuidv4","connect","props","useState","setShowForm","setError","event","preventDefault","trim","matrix","Array","keys","map","dispatch","setShowButtons","errorObj","highlight","setColumnsHandler","name","value","replace","setHighlightsHandler","className","onSubmit","placeholder","maxLength","onChange","setRowsHandler","target","showPercent","setShowPercent","percentStyle","backgroundImage","onClick","newTable","onMouseEnter","hashForLight","amountHash","abs","sort","a","b","slice","Number","some","hashItem","onMouseLeave","style","tableCopy","columnSum","rowLine","row","oneRow","splice","rowSum","reduce","cur","prev","forEach","i","key","toFixed","Object","values","length","newRow","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8309e0f6.chunk.js","sourcesContent":["export const ACTION_TYPES = {\n  SET_COLUMNS: 'SET::COLUMNS',\n  SET_ROWS: 'SET::ROWS',\n  SET_TABLE: 'SET::TABLE',\n  SET_HIGHLIGHT: 'SET::HIGHLIGHT',\n  SET_SHOW_TABLE: 'SET::SHOW::TABLE',\n  SET_SHOW_BUTTONS: 'SET::SHOW::BUTTONS'\n}\n\nexport const setColumns = (param) => ({\n  payload: param,\n  type: ACTION_TYPES.SET_COLUMNS\n})\n\nexport const setRows = (param) => ({\n  payload: param,\n  type: ACTION_TYPES.SET_ROWS\n})\n\nexport const setHighlights = (param) => ({\n  payload: param,\n  type: ACTION_TYPES.SET_HIGHLIGHT\n})\n\nexport const setTable = (param) => ({\n  payload: param,\n  type: ACTION_TYPES.SET_TABLE\n})\n\nexport const setShowTable = (param) => ({\n  payload: param,\n  type: ACTION_TYPES.SET_SHOW_TABLE\n})\n\nexport const setShowButtons = (param) => ({\n  payload: param,\n  type: ACTION_TYPES.SET_SHOW_BUTTONS\n})\n","import { createStore } from 'redux'\nimport { ACTION_TYPES } from './actions'\n\nfunction rootReducer (state, action) {\n  const {\n    SET_COLUMNS,\n    SET_ROWS,\n    SET_HIGHLIGHT,\n    SET_TABLE,\n    SET_SHOW_TABLE,\n    SET_SHOW_BUTTONS\n  } = ACTION_TYPES\n\n  switch (action.type) {\n    case SET_TABLE: {\n      return {\n        ...state,\n        table: action.payload\n      }\n    }\n\n    case SET_COLUMNS: {\n      return {\n        ...state,\n        columns: action.payload\n      }\n    }\n\n    case SET_ROWS: {\n      return {\n        ...state,\n        rows: action.payload\n      }\n    }\n\n    case SET_HIGHLIGHT: {\n      return {\n        ...state,\n        highlights: action.payload\n      }\n    }\n\n    case SET_SHOW_TABLE: {\n      return {\n        ...state,\n        showTable: action.payload\n      }\n    }\n\n    case SET_SHOW_BUTTONS: {\n      return {\n        ...state,\n        showButtons: action.payload\n      }\n    }\n\n    default:\n      return state\n  }\n}\n\nconst initialState = {\n  rows: '',\n  columns: '',\n  highlights: '',\n  table: [],\n  showTable: false,\n  showButtons: false\n}\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n)\n\nexport default store\n","import PropTypes from 'prop-types'\n\nexport const TableShape = PropTypes.shape({\n  rows: PropTypes.string,\n  columns: PropTypes.string,\n  showTable: PropTypes.bool,\n  cell: PropTypes.string,\n  table: PropTypes.array,\n  incrementCell: PropTypes.func,\n  highlights: PropTypes.number,\n  setTable: PropTypes.func\n})\n\nexport const FormShape = PropTypes.shape({\n  handleAddData: PropTypes.func,\n  onChangeInput: PropTypes.func,\n  rows: PropTypes.number,\n  columns: PropTypes.number,\n  highlights: PropTypes.number,\n  showForm: PropTypes.bool,\n  error: PropTypes.shape({\n    rows: PropTypes.bool,\n    columns: PropTypes.bool,\n    highlights: PropTypes.bool\n  })\n})\n\nexport const TableItemShape = PropTypes.shape({\n  incrementCell: PropTypes.func,\n  amount: PropTypes.number,\n  id: PropTypes.number,\n  percent: PropTypes.number,\n  table: PropTypes.array,\n  highlights: PropTypes.number,\n  setTable: PropTypes.func,\n  isLight: PropTypes.bool\n})\n\nexport const ButtonsShape = PropTypes.shape({\n  showButtons: PropTypes.bool,\n  deleteRow: PropTypes.func,\n  addRow: PropTypes.func\n})\n","import { v4 as uuidv4 } from 'uuid'\n\nexport const randomGenerate = item => ({\n  amount: Math.floor(Math.random() * 999),\n  id: uuidv4(),\n  isLight: false\n})\n","import React, { useState } from 'react'\nimport { FormShape } from '../../helpers/shapes'\nimport { randomGenerate } from '../../helpers/helpers'\nimport { connect } from 'react-redux'\nimport store from '../../store/reducers'\nimport './Form.css'\nimport {\n  setColumns,\n  setRows,\n  setHighlights,\n  setTable,\n  setShowTable,\n  setShowButtons\n} from '../../store/actions'\n\nconst Form = (props) => {\n  const {\n    rows,\n    columns,\n    highlights\n  } = props\n\n  const [showForm, setShowForm] = useState(true)\n  const [error, setError] = useState({ rows: false, columns: false, highlights: false })\n\n  const handleAddData = (event) => {\n    event.preventDefault()\n\n    if (rows.trim() && columns.trim() && highlights.trim()) {\n      const matrix = [...Array(columns * rows).keys()].map(randomGenerate)\n\n      store.dispatch(setTable(matrix))\n      store.dispatch(setShowTable(true))\n      store.dispatch(setShowButtons(true))\n\n      setShowForm(false)\n    }\n\n    const errorObj = {\n      rows: '',\n      columns: '',\n      highlight: ''\n    }\n\n    if (!rows) {\n      errorObj.rows = true\n    }\n\n    if (!columns) {\n      errorObj.columns = true\n    }\n\n    if (!highlights) {\n      errorObj.highlights = true\n    }\n\n    setError({\n      rows: errorObj.rows,\n      columns: errorObj.columns,\n      highlights: errorObj.highlights\n    })\n  }\n\n  const setColumnsHandler = ({ name, value }) => {\n    setError({ columns: false })\n    store.dispatch(setColumns(value.replace(/^[^0-9]/, '')))\n  }\n  const setRowsHandler = ({ name, value }) => {\n    setError({ rows: false })\n    store.dispatch(setRows(value.replace(/^[^0-9]/, '')))\n  }\n  const setHighlightsHandler = ({ name, value }) => {\n    setError({ highlights: false })\n    store.dispatch(setHighlights(value.replace(/^[^0-9]/, '')))\n  }\n\n  return (\n    showForm && (\n      <form className=\"form\" onSubmit={(event) => handleAddData(event)}>\n        {\n          error.rows && (\n            <div>\n              Please add rows value\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"rows\"\n          className={`form-control ${error.rows && 'error'}`}\n          placeholder=\"Rows...\"\n          maxLength=\"2\"\n          onChange={(event) => setRowsHandler(event.target)}\n          value={rows}\n        />\n        {\n          error.columns && (\n            <div>\n              Please add columns value\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"columns\"\n          className={`form-control ${error.columns && 'error'}`}\n          placeholder=\"Columns...\"\n          maxLength=\"2\"\n          onChange={(event) => setColumnsHandler(event.target)}\n          value={columns}\n        />\n        {\n          error.highlights && (\n            <div>\n              Please add highlight value\n            </div>\n          )\n        }\n        <input\n          type=\"text\"\n          name=\"highlights\"\n          className={`form-control ${error.highlights && 'error'}`}\n          placeholder=\"Highlight cells...\"\n          maxLength=\"2\"\n          onChange={(event) => setHighlightsHandler(event.target)}\n          value={highlights}\n        />\n        <button\n          type=\"submit\"\n          className=\"btn btn-dark\"\n        >\n          Generate\n        </button>\n      </form>\n    )\n  )\n}\n\nForm.propTypes = FormShape.isRequired\n\nconst mapStateToProps = state => ({\n  columns: state.columns,\n  rows: state.rows,\n  highlights: state.highlights\n})\n\nexport default connect(mapStateToProps)(Form)\n","import React, { useState } from 'react'\nimport { connect } from 'react-redux'\nimport store from '../../store/reducers'\nimport { setTable } from '../../store/actions'\nimport { TableItemShape } from '../../helpers/shapes'\n\nconst TableItem = (props) => {\n  const {\n    amount,\n    id,\n    percent,\n    table,\n    highlights,\n    isLight\n  } = props\n\n  const [showPercent, setShowPercent] = useState(false)\n\n  const percentStyle = {\n    backgroundImage: `linear-gradient(to left, #dc3545 0% ${percent}%, #6c757d ${percent}% 100%)`\n  }\n\n  const incrementCell = (id) => {\n    const newTable = table.map(item => (\n      item.id === id\n        ? { ...item, amount: item.amount + 1 }\n        : item\n    ))\n\n    store.dispatch(setTable(newTable))\n  }\n\n  const onMouseEnterHandler = () => {\n    setShowPercent(true)\n\n    const hashForLight = table.map((item) => ({\n      ...item,\n      amountHash: Math.abs(item.amount - amount)\n    }))\n      .sort((a, b) => a.amountHash - b.amountHash)\n      .slice(0, Number(highlights) + 1)\n\n    const newTable = table.map((item) => (\n      hashForLight.some(hashItem => hashItem.id === item.id)\n        ? { ...item, isLight: true }\n        : { ...item, isLight: false }\n    ))\n\n    store.dispatch(setTable(newTable))\n  }\n\n  const onMouseLeaveHandler = () => {\n    setShowPercent(false)\n\n    const newTable = table.map((item) => ({\n      ...item,\n      isLight: false\n    }))\n\n    store.dispatch(setTable(newTable))\n  }\n\n  return (\n    <td\n      id={id}\n      className={`${isLight ? 'table-item--light' : ''}`}\n      onClick={(event) => incrementCell(event.target.id)}\n      onMouseEnter={onMouseEnterHandler}\n      onMouseLeave={onMouseLeaveHandler}\n      style={showPercent ? percentStyle : {}}\n    >\n      {\n        showPercent\n          ? `${percent}%`\n          : amount\n      }\n    </td>\n  )\n}\n\nTableItem.propTypes = TableItemShape.isRequired\n\nconst mapStateToProps = state => ({\n  table: state.table,\n  highlights: state.highlights\n})\n\nexport default connect(mapStateToProps)(TableItem)\n","import React from 'react'\nimport './Table.css'\nimport { connect } from 'react-redux'\nimport { TableShape } from '../../helpers/shapes'\nimport TableItem from '../TableItem/TableItem'\n\nconst Table = (props) => {\n  const {\n    rows,\n    columns,\n    table,\n    showTable\n  } = props\n\n  const tableCopy = [...table]\n  const columnSum = {}\n  const rowLine = [...Array(Number(rows)).keys()]\n\n  return (\n    <>\n      {showTable && (\n        <table className=\"table table-dark\">\n          <tbody>\n            {rowLine.map(row => {\n              const oneRow = tableCopy.splice(0, Number(columns))\n              const rowSum = oneRow.map(item => item.amount).reduce((cur, prev) => cur + prev, 0)\n\n              oneRow.forEach((item, i) => {\n                if (columnSum[i]) {\n                  columnSum[i] += item.amount\n                } else {\n                  columnSum[i] = item.amount\n                }\n              })\n\n              return (\n                <tr key={row} className=\"table-row\">\n                  {oneRow.map(item => (\n                    <TableItem\n                      key={item.id}\n                      id={item.id}\n                      amount={item.amount}\n                      percent={(item.amount / rowSum * 100).toFixed(2)}\n                      isLight={item.isLight}\n                    />\n                  ))}\n                  <td>Sum: {rowSum}</td>\n                </tr>\n              )\n            })}\n            <tr>{Object.values(columnSum).map(item => (\n              <td key={item}>Average sum: {Math.floor(item / columns)}</td>\n            ))}</tr>\n          </tbody>\n        </table>\n      )}\n    </>\n  )\n}\n\nTable.propTypes = TableShape.isRequired\n\nconst mapStateToProps = (state) => ({\n  columns: state.columns,\n  table: state.table,\n  rows: state.rows,\n  showTable: state.showTable\n})\n\nexport default connect(mapStateToProps)(Table)\n","import React from 'react'\nimport { connect } from 'react-redux'\nimport store from '../../store/reducers'\nimport { setRows, setTable } from '../../store/actions'\nimport { randomGenerate } from '../../helpers/helpers'\nimport { ButtonsShape } from '../../helpers/shapes'\nimport './Buttons.css'\n\nconst Buttons = (props) => {\n  const { showButtons, rows, columns, table } = props\n\n  const deleteRow = (event) => {\n    if (rows > 0) {\n      store.dispatch(setRows(rows - 1))\n      store.dispatch(setTable(table.splice(0, table.length - columns)))\n    }\n  }\n\n  const addRow = (event) => {\n    store.dispatch(setRows(Number(rows) + 1))\n\n    const newRow = [...Array(Number(columns)).keys()].map(randomGenerate)\n\n    store.dispatch(setTable([...table, ...newRow]))\n  }\n\n  return (\n    <>\n      {showButtons && (\n        <div className=\"btn-group\">\n          <button\n            type=\"button\"\n            className=\"btn btn-dark\"\n            onClick={deleteRow}\n          >\n            Delete row -\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-dark\"\n            onClick={addRow}\n          >\n            Add row +\n          </button>\n        </div>\n      )}\n    </>\n  )\n}\n\nButtons.propTypes = ButtonsShape.isRequired\n\nconst mapStateToProps = state => ({\n  showButtons: state.showButtons,\n  rows: state.rows,\n  columns: state.columns,\n  table: state.table\n})\n\nexport default connect(mapStateToProps)(Buttons)\n","import React from 'react'\nimport Form from './components/Form/Form'\nimport Table from './components/Table/Table'\nimport Buttons from './components/Buttons/Buttons'\nimport './App.css'\n\nconst App = () => (\n  <div className=\"main\">\n    <Form />\n    <Buttons />\n    <Table/>\n  </div>\n)\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { Provider } from 'react-redux'\nimport store from './store/reducers'\nimport App from './App'\n\nimport 'bootstrap/dist/css/bootstrap.css'\nimport './index.css'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}